{"version":3,"sources":["services/persons.js","components/Persons.js","components/PersonForm.js","components/CheckForName.js","components/SuccessNotification.js","components/ErrorNotification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","console","log","post","id","delete","changedPerson","put","Person","person","deletePerson","name","number","onClick","Persons","props","persons","filter","newFilter","includes","map","PersonForm","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","CheckForName","length","i","window","confirm","SuccessNotification","message","className","ErrorNotification","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","replaceNumber","namenumberandid","find","n","returnedPerson","catch","error","setTimeout","event","target","preventDefault","whatToDo","nameObject","concat","addNameAndNumber","personToBeDeleted","personDeleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41b33535.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n\nconst create = newObject => {\n  console.log('tulee tÃ¤nne')\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n    // return axios.post(baseUrl, newObject)\n}\n\nconst deletePerson = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst replaceNumber = (id, changedPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, changedPerson)\n  return request.then(response => response.data)\n  // return axios.put(`${baseUrl}/${id}`, changedPerson)\n}\n\nexport default { getAll, create, deletePerson, replaceNumber\n  }","import React from 'react'\n\nconst Person = ({ person, deletePerson }) => {\n    return (\n        <div>\n            {person.name} {person.number}\n            <button onClick={deletePerson}>delete</button>\n        </div>\n\n    )\n}\n\n\nconst Persons = (props) => {\n    const persons = props.persons\n    const filter = props.newFilter\n    const deletePerson = props.deletePerson\n    return (\n      <div>\n      {persons.filter(person => person.name.includes(filter)).map(person => <Person \n      key={person.name} \n      person={person} \n      deletePerson={() => deletePerson(person.id)}\n      ></Person>)}\n      </div>\n    )\n}\n  \nexport default Persons","import React from 'react'\n\nconst PersonForm = ({ addName, newName, newNumber, handleNameChange, handleNumberChange }) => {\n    return (\n      <form onSubmit={addName}>\n        <div>\n          name: <input\n          value={newName}\n          onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input\n          value={newNumber}\n          onChange={handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>  \n        </div>\n      </form>\n    )\n  }\n\nexport default PersonForm","const CheckForName = (persons, newName) => {\n  const length = persons.persons.length\n  const name = newName.newName\n  for (let i =0; i < length; i++) {\n    if (persons.persons[i].name === name) {\n      if (window.confirm(`${name} is already added to phonebook, replace the old number with a new one?`)) {\n        return persons.persons[i].id\n      } else {\n        return \"dont add anything\"\n      }\n    }\n  }\n  return \"add name and number\"\n}\n\nexport default CheckForName","import React from 'react'\n\nconst SuccessNotification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"success\">\n        {message}\n        </div>\n    )\n    }\n\nexport default SuccessNotification","import React from 'react'\n\nconst ErrorNotification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n        {message}\n        </div>\n    )\n    }\n\nexport default ErrorNotification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport CheckForName from './components/CheckForName'\nimport SuccessNotification from './components/SuccessNotification'\nimport ErrorNotification from './components/ErrorNotification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n  \n  const addNameAndNumber = ( {newName, newNumber }) => {\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    }\n    personService\n      .create(nameObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setSuccessMessage(`Added ${nameObject.name}`)\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n      })\n  }\n\n  const dontAddNameAndNumber = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n\n\n  const addName = (event) => {\n    event.preventDefault()\n    const whatToDo = CheckForName({persons}, {newName})\n    if (whatToDo === \"add name and number\") {\n      addNameAndNumber({ newName, newNumber })\n    } else if (whatToDo === \"dont add anything\"){\n      dontAddNameAndNumber()\n    } else {\n      replaceNumber([newName, newNumber, whatToDo])\n    }\n  }\n\n  const deletePerson = (id) => {\n    const personToBeDeleted = persons.filter(person => person.id === id)\n    const personDeleted = persons.filter(person => person.id !== id)\n    if (window.confirm(`Delete ${personToBeDeleted[0].name}?`)) {\n      personService\n        .deletePerson(id)\n        .then(response => {\n          setPersons(personDeleted)\n          setSuccessMessage(`Deleted ${personToBeDeleted[0].name}`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(`Information of ${personToBeDeleted[0].name} has already been removed from server`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })  \n    }\n  }\n\n  const replaceNumber = namenumberandid => {\n    const number = namenumberandid[1]\n    const id = namenumberandid[2]\n    const person = persons.find(n => n.id === id)\n    const changedPerson = { ...person, number: number }\n    personService\n      .replaceNumber(id, changedPerson)\n      .then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n      })\n    .catch(error => {\n      setErrorMessage(`Information of ${person.name} has already been removed from server`)\n      setTimeout(() => {\n        setSuccessMessage(null)\n      }, 5000)\n    })  \n    setNewName('')\n    setNewNumber('')\n  }\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessNotification message={successMessage} />\n      <ErrorNotification message={errorMessage} />\n      <form>\n        <div >\n          filter shown with: \n          <input \n          value={newFilter}\n          onChange={handleFilterChange}\n          />\n        </div>\n      </form>\n      <h2>add a new</h2>\n      <PersonForm \n      addName={addName} \n      newName={newName} \n      newNumber={newNumber} \n      handleNameChange={handleNameChange} \n      handleNumberChange={handleNumberChange}>\n      </PersonForm>\n      <h2>Numbers</h2>\n      <Persons persons={persons} newFilter={newFilter} deletePerson = {deletePerson}></Persons>\n    </div>\n)\n}\n\nexport default App\n\n\n// maiden tiedot 2.14 tekemÃ¤ttÃ¤\n\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}